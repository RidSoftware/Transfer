document.getElementById("loginForm").addEventListener("submit", async function(event) {
    event.preventDefault();

    let email = document.getElementById("email").value.trim();
    let password = document.getElementById("password").value;
    let errorMessage = document.getElementById("loginErrorMessage"); 
    let confirmationMessage = document.getElementById("confirmationMessage");
    let overlay = document.getElementById("confirmationOverlay"); 

    // Reset UI messages
    errorMessage.textContent = "";
    errorMessage.style.display = "none";
    confirmationMessage.style.display = "none";
    overlay.style.display = "none"; 

    try {
        // Attempt Login API Call
        let response = await fetch("http://localhost:8080/api/login", { 
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email, password })
        });

        let data = await response.json();

        if (!data.success) {
            errorMessage.textContent = data.message;
            errorMessage.style.display = "block";
            return;
        }

        // Store user data in local storage
        localStorage.setItem("user", JSON.stringify(data.user));
        let user = JSON.parse(localStorage.getItem("user"));
        let userID = user.userID;

        // Show confirmation message before energy API calls
        confirmationMessage.innerHTML = `
            <div class="confirmation-container">
                <h2>Login Successful!</h2>
                <p>Welcome back, <strong>${user.firstname}</strong></p>
                <button class="dashboard-btn" onclick="window.location.href='Dashboard.html'">
                    Go to Dashboard <i class="fa fa-arrow-right"></i>
                </button>
            </div>
        `;
        confirmationMessage.style.display = "block";
        overlay.style.display = "block"; // Show overlay

        // Attempt to pull 24-hour energy data
        try {
            let energyDayResponse = await fetch("http://localhost:8080/api/pull24hr", { 
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ userID })
            });

            if (energyDayResponse.ok) {
                let energyDataDay = await energyDayResponse.json();
                if (energyDataDay.success) {
                    localStorage.setItem("energyDataDay", JSON.stringify(energyDataDay.twentyfourhr));
                } else {
                    console.warn("24-hour energy data pull failed:", energyDataDay.message);
                    localStorage.setItem("energyDataDay", JSON.stringify({})); // Store empty object
                }
            } else {
                throw new Error("Failed to fetch 24-hour energy data.");
            }
        } catch (error) {
            console.warn("Error fetching 24-hour energy data:", error);
            localStorage.setItem("energyDataDay", JSON.stringify({})); // Store empty object
        }

        // Attempt to pull 7-day energy data
        try {
            let energyWeekResponse = await fetch("http://localhost:8080/api/pull7days", { 
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ userID })
            });

            if (energyWeekResponse.ok) {
                let energyDataWeek = await energyWeekResponse.json();
                if (energyDataWeek.success) {
                    localStorage.setItem("energyDataWeek", JSON.stringify(energyDataWeek.sevenDays));
                } else {
                    console.warn("7-day energy data pull failed:", energyDataWeek.message);
                    localStorage.setItem("energyDataWeek", JSON.stringify({})); // Store empty object
                }
            } else {
                throw new Error("Failed to fetch 7-day energy data.");
            }
        } catch (error) {
            console.warn("Error fetching 7-day energy data:", error);
            localStorage.setItem("energyDataWeek", JSON.stringify({})); // Store empty object
        }

    } catch (error) {
        console.error("Login error:", error);
        errorMessage.textContent = "An error occurred. Please try again later.";
        errorMessage.style.display = "block";
    }
});
